/*
 * 
 *
 */

#ifndef _IR_API_H_
#define _IR_API_H_

#ifdef __cplusplus
extern "C"
{
#endif

#define IR_VERSION  0x09

typedef unsigned char BYTE;
typedef unsigned short WORD;

#define ERROR	-1
#define SUCCESS	0

//serial wait time
#define WAIT_TIME_SEC	0    // unit second
#define LEARN_WAIT_TIME	30
#define WAIT_TIME_MS	150 //unit ms bit to bit per pack
#define WAIT_TIME_BEFORE_TRIMIT 0

#define TRANS_TYPE_CONTINUOUS  0x00
#define TRANS_TYPE_SINGLE      0x08

/**
 * msleep - sleep msecs.
 *
 * @msec - 
 *
 **/
int msleep( int ) ;


/* 
 *
 *
 *
 */
int  serial_open(char * port, int mode);

/* 
 *
 *
 *
 */
void serial_close(int fd);

int IrTransmitStop(int fd);
int IrTransmitCode(int fd, WORD codeNum, BYTE keyID, BYTE IrCodeSrc, BYTE transType, BYTE deviceType);
int IrGetKeyflag( int fd, WORD dodeNum, BYTE *keyflag, int *length);
int IrGetVersion(int fd, BYTE *version, BYTE *length);
int IrLearnCode(int fd, BYTE location);
int IrStoreToE2prom(int fd, BYTE location, BYTE *data);
int IrMasterClear(int fd);
int IrStandby(int fd);
int IrWakeup(int fd);
int IrSetGpio(int fd, BYTE gpConfig);
int IrReadGgpioConfig(int fd,BYTE *gpconfig);
int IrWriteToGgpio(int fd, BYTE data);
int IrReadGgpio(int fd, BYTE *gpconfig);
int IrBackLightCtrl(int fd, int state);

#if 1//zhangning add

/*  !function
 *  *****************************************************
 *  Name			: Boost_Set
 *
 *  Function       	: set boost 
 *
 *  Input          	: state: 0: set boost off
 *  						 1: set boost on
 *
 *  Output        	: null
 *  
 *  Return        	: sucess: 0	failure: -1
 *
 *  Extern         	: NULL
 *
 *  Programmer   	: zhangning
 *
 *  Date          	: 2011.6.24
 *
 *  ****************************************************
*/
int Boost_Set(int state);


/*  !function
 *  *****************************************************
 *  Name			: Boost_Get
 *
 *  Function       	: get boost status
 *
 *  Input          	: null
 *
 *  Output        	: null
 *  
 *  Return        	: sucess: 0: Boost off
 *  						 64: Boost on	
 *  				  failure: -1
 *
 *  Extern         	: NULL
 *
 *  Programmer   	: zhangning
 *
 *  Date          	: 2011.6.24
 *
 *  ****************************************************
*/
int Boost_Get();

/*  !function
 *  *****************************************************
 *  Name			: IrGetLearnData
 *
 *  Function       	: Get learn data that was stored at corresponding location from RT300
 *
 *  Input          	:fd:  serial port 
 *					 storageLoction(0~99):The location of learn data
 *
 *  Output        	:learnData: learn data is generated by RT300
 *					 dataLength: learn data's length.The value is 81 if get learn data successfully
 *  
 *  Return        	:sucess: 0	failure: -1
 *
 *  Extern         	:NULL
 *
 *  Programmer   	:zhangning
 *
 *  Date          	:2010.12.21
 *
 *  ****************************************************
 */
int IrGetLearnData(int fd, int storageLoction, BYTE *learnData, int *dataLength);


/*  !function
 *  *****************************************************
 *  Name			: IrStorageLearnData
 *
 *  Function       	: Storage learn data to RT300
 *
 *  Input          	:fd:  serial port 
 *					 storageLoction(range:0~99): Location that you want to store learn data 
 *					 learnData: Learn data that you want to store RT300
 *					 dataLength: learn data's length,the length is 81 if the learnData is accurately
 *  Output        	:NULL
 *  
 *  Return        	:sucess: 0	failure: -1
 *
 *  Extern         	:NULL
 *
 *  Programmer   	:zhangning
 *
 *  Date          	:2010.12.21
 *
 *  ****************************************************
 */
int IrStorageLearnData(int fd, int storageLoction, BYTE *learnData, int dataLength);


/*  !function
 *  *****************************************************
 *  Name			: IrReadFromE2prom
 *
 *  Function       	: read supplemental IR data that stored in external EEPROM 
 *
 *  Input          	:fd:  serial port 
 *					 storageLoction(range:0~13): Location that you want to read 
 *					 data: Corresponding supplemental IR data
 *  Output        	:NULL
 *  
 *  Return        	:sucess: 0	failure: -1
 *
 *  Extern         	:NULL
 *
 *  Programmer   	:zhangning
 *
 *  Date          	:2010.12.24
 *
 *  ****************************************************
 */
int IrReadFromE2prom(int fd, BYTE location, BYTE *data);

#endif

#ifdef __cplusplus
}
#endif

#endif /* _IR_API_H_ */

